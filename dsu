class DSU{
  public:
  vl parent,size;
  DSU(ll n){
    parent.resize(n+1);
    size.resize(n+1,1);
    fs(i,0,n+1) parent[i]=i;
  }
  ll find(ll x){
    if(parent[x]!=x) parent[x]=find(parent[x]);
    return parent[x];
  }
  void unite(ll x, ll y){
    ll xr=find(x);
    ll yr=find(y);
    if(xr==yr) return;
    if(size[xr]<size[yr]) swap(xr,yr);
    parent[yr]=xr;
    size[xr]+=size[yr];
  }
  ll component_size(ll x){
    return size[find(x)];
  }  
};
